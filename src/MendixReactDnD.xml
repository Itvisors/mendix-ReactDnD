<?xml version="1.0" encoding="utf-8" ?>
<widget id="itvisors.mendixreactdnd.MendixReactDnD" pluginWidget="true" needsEntityContext="true" offlineCapable="true"
        supportedPlatform="Web"
        xmlns="http://www.mendix.com/widget/1.0/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://www.mendix.com/widget/1.0/ ../node_modules/mendix/custom_widget.xsd">
    <name>Drag-drop container</name>
    <description>Wrapper for react-dnd</description>
    <icon>iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAi0lEQVRYw+2WwQ7AIAhDreH/f7k7mRijk2AIZoOTh1UfWHAgyRIYtQRHAiSAtAUA0watiSx6khdVYMxoF6uMNfpe+00TAlB7wrUCGggXgN4HOwg5zWD8ZqYBsDTnfW2obamW6TiIZoPpbZ/qbb7dXHC9As1QkqiD7zWh9VW06sMrgPwrToAESIDfAzwsEC9SZeBQXwAAAABJRU5ErkJggg==</icon>
    <properties>

        <propertyGroup caption="Containers">
            <property key="containerList" type="object" isList="true">
                <caption>Datasource containers</caption>
                <description></description>
                <properties>
                    <propertyGroup caption="Container">
                        <property key="containerID" type="expression">
                            <caption>Container ID</caption>
                            <description>Set a key value of the enumeration used for the Clicked container ID</description>
                            <returnType type="String" />
                        </property>
                        <property key="rowNumber" type="expression">
                            <caption>Row number</caption>
                            <description>Row number, starts at 1</description>
                            <returnType type="Integer" />
                        </property>
                        <property key="columnNumber" type="expression">
                            <caption>Column number</caption>
                            <description>Column number, starts at 1, widget does not create components for gaps in the column numbers</description>
                            <returnType type="Integer" />
                        </property>
                        <property key="dragDropType" type="enumeration" defaultValue="none">
                            <caption>DnD type</caption>
                            <description>Drag/drop type.</description>
                            <enumerationValues>
                                <enumerationValue key="none">None</enumerationValue>
                                <enumerationValue key="drag">Drag</enumerationValue>
                                <enumerationValue key="drop">Drop</enumerationValue>
                                <enumerationValue key="both">Both</enumerationValue>
                            </enumerationValues>
                        </property>
                        <property key="returnOnClick" type="expression">
                            <caption>Return OnClick</caption>
                            <description>Whether OnClick events should be returned for the container. Useful for getting the exact click coordinate on the container.</description>
                            <returnType type="Boolean" />
                        </property>
                        <property key="acceptsContainerIDs" type="expression" required="false">
                            <caption>Accepts IDs</caption>
                            <description>One or more key values of the enumeration used for the Container ID. Separate values using a comma.</description>
                            <returnType type="String" />
                        </property>
                    </propertyGroup>
                    <propertyGroup caption="Datasource">
                        <property key="ds" type="datasource" isList="true" required="false">
                            <caption>Data source</caption>
                            <description></description>
                        </property>
                        <property key="dsContent" type="widgets" dataSource="ds" required="false">
                            <caption>Content for datasource</caption>
                            <description></description>
                        </property>
                        <property key="dsNameAttribute" type="attribute" dataSource="ds" required="false">
                            <caption>Name</caption>
                            <description>Name attribute. When set, will render a data-name attribute with the value on the item element.</description>
                            <attributeTypes>
                                <attributeType name="String" />
                            </attributeTypes>
                        </property>
                    </propertyGroup>
                    <propertyGroup caption="Image item">
                        <property key="dsOffsetX" type="attribute" dataSource="ds" required="false">
                            <caption>Offset X</caption>
                            <description>Offset X position for the item. When X and Y offset are set, position absolute is also set on the item.</description>
                            <attributeTypes>
                                <attributeType name="Integer" />
                            </attributeTypes>
                        </property>
                        <property key="dsOffsetY" type="attribute" dataSource="ds" required="false">
                            <caption>Offset Y</caption>
                            <description>Offset Y position for the item.</description>
                            <attributeTypes>
                                <attributeType name="Integer" />
                            </attributeTypes>
                        </property>
                        <property key="dsImageUrl" type="attribute" dataSource="ds" required="false">
                            <caption>Image URL</caption>
                            <description>Image URL. Can be absolute, concatenated with Mendix remote URL when it does not start with http, should not start with / in that case.</description>
                            <attributeTypes>
                                <attributeType name="String" />
                            </attributeTypes>
                        </property>
                        <property key="dsImageHeight" type="attribute" dataSource="ds" required="false">
                            <caption>Image height</caption>
                            <description></description>
                            <attributeTypes>
                                <attributeType name="Integer" />
                            </attributeTypes>
                        </property>
                        <property key="dsImageWidth" type="attribute" dataSource="ds" required="false">
                            <caption>Image width</caption>
                            <description></description>
                            <attributeTypes>
                                <attributeType name="Integer" />
                            </attributeTypes>
                        </property>
                        <property key="dsScaleImage" type="expression" dataSource="ds" required="false">
                            <caption>Scale image</caption>
                            <description>Scale image with zoom percentage</description>
                            <returnType type="Boolean" />
                        </property>
                        <property key="dsAdjustOffsetOnDrop" type="expression" dataSource="ds" required="false">
                            <caption>Adjust drop offset</caption>
                            <description>When dropping an image from a palette that is not scaled onto a canvas that can scale, set this to true to adjust the drop offset for the zomm percentage.</description>
                            <returnType type="Boolean" />
                        </property>
                        <property key="dsImageRotation" type="attribute" dataSource="ds" required="false">
                            <caption>Rotation</caption>
                            <description></description>
                            <attributeTypes>
                                <attributeType name="Integer" />
                            </attributeTypes>
                        </property>
                        <property key="dsAllowRotate" type="expression" dataSource="ds" required="false">
                            <caption>Allow rotate</caption>
                            <description>Whether user may rotate the image. Only when image is rendered. If true, a rotation handle will be shown when the user hovers over the image.</description>
                            <returnType type="Boolean" />
                        </property>
                    </propertyGroup>
                    <propertyGroup caption="Styling">
                        <property key="containerClass" type="expression" required="false">
                            <caption>Container class</caption>
                            <description>Class to place on the container</description>
                            <returnType type="String" />
                        </property>
                        <property key="draggableClass" type="string" required="true" defaultValue="draggable-container">
                            <caption>Draggable class</caption>
                            <description>Class to place on the draggable container</description>
                        </property>
                        <property key="draggingClass" type="string" required="true" defaultValue="dragging-container">
                            <caption>Dragging class</caption>
                            <description>Class to place on the draggable container while dragging is active. Note that this applies to the original item, not the dragged copy</description>
                        </property>
                        <property key="dropTargetClass" type="string" required="true" defaultValue="droptarget-container">
                            <caption>Drop target class</caption>
                            <description>Class to place on the drop target container</description>
                        </property>
                        <property key="canDropClass" type="string" required="true" defaultValue="droptarget-candrop">
                            <caption>Can drop class</caption>
                            <description>Class to place on the drop target container when a valid item is hovered over it</description>
                        </property>
                        <property key="invalidDropClass" type="string" required="true" defaultValue="droptarget-invalid">
                            <caption>Invalid drop class</caption>
                            <description>Class to place on the drop target container when an invalid item is hovered over it</description>
                        </property>
                    </propertyGroup>
                </properties>
            </property>
        </propertyGroup>

        <propertyGroup caption="Configuration">
            <property key="zoomPercentage" type="expression" required="false">
                <caption>Zoom %</caption>
                <description>Optional. Zoom percentage, when set, will be used to correct X/Y offset for the zoom percentage</description>
                <returnType type="Integer" />
            </property>
            <property key="adjustOffset" type="expression" required="false">
                <caption>Adjust offset</caption>
                <description>Optional. Adjust offset for zoom position.</description>
                <returnType type="Boolean" />
            </property>
            <property key="snapToGrid" type="expression" required="false">
                <caption>Snap to grid</caption>
                <description>When true, drop only along grid lines.</description>
                <returnType type="Boolean" />
            </property>
            <property key="snapToSize" type="expression" defaultValue="1">
                <caption>Snap to size</caption>
                <description>Snap to size. Any value less than 5 is ignored</description>
                <returnType type="Integer" />
            </property>
            <property key="gridSize" type="expression" defaultValue="1">
                <caption>Grid size</caption>
                <description>Grid size, 1 means no grid. Any value less than 5 is ignored</description>
                <returnType type="Integer" />
            </property>
            <property key="showGrid" type="expression" required="false">
                <caption>Show grid</caption>
                <description>When to show the grid, best to use an enumeration for this. Possible values: never, whileDragging, always. Any other values are treated as never.</description>
                <returnType type="String" />
            </property>
        </propertyGroup>

        <propertyGroup caption="Events">
            <property key="eventContainerID" type="attribute">
                <caption>Container ID</caption>
                <description>Container ID of the dragged item</description>
                <attributeTypes>
                    <attributeType name="Enum" />
                </attributeTypes>
            </property>
            <property key="eventClientX" type="attribute" required="false">
                <caption>Client X</caption>
                <description>Optional. Client X position for the event.</description>
                <attributeTypes>
                    <attributeType name="Integer" />
                </attributeTypes>
            </property>
            <property key="eventClientY" type="attribute" required="false">
                <caption>Client Y</caption>
                <description>Optional. Client Y position for the event.</description>
                <attributeTypes>
                    <attributeType name="Integer" />
                </attributeTypes>
            </property>
            <property key="eventOffsetX" type="attribute" required="false">
                <caption>Offset X</caption>
                <description>Optional. Offset X position for the event. Relative from the element</description>
                <attributeTypes>
                    <attributeType name="Integer" />
                </attributeTypes>
            </property>
            <property key="eventOffsetY" type="attribute" required="false">
                <caption>Offset Y</caption>
                <description>Optional. Offset Y position for the event. Relative from the element</description>
                <attributeTypes>
                    <attributeType name="Integer" />
                </attributeTypes>
            </property>
            <property key="eventGuid" type="attribute">
                <caption>Object GUID</caption>
                <description>When an object was clicked or dragged, contains the GUID of the dragged object</description>
                <attributeTypes>
                    <attributeType name="String" />
                </attributeTypes>
            </property>
            <property key="dropTargetContainerID" type="attribute">
                <caption>Drop target ID</caption>
                <description>When an object was dragged onto another object, contains the container ID of the drop target</description>
                <attributeTypes>
                    <attributeType name="Enum" />
                </attributeTypes>
            </property>
            <property key="dropTargetGuid" type="attribute">
                <caption>GUID of drop target</caption>
                <description>When an object was dragged onto another object, contains the GUID of the drop target</description>
                <attributeTypes>
                    <attributeType name="String" />
                </attributeTypes>
            </property>
            <property key="newRotation" type="attribute" required="false">
                <caption>New rotation</caption>
                <description>Optional. New rotation for the object. Required when allowing users to rotate items.</description>
                <attributeTypes>
                    <attributeType name="Integer" />
                </attributeTypes>
            </property>
            <property key="onClickAction" type="action" required="false">
                <caption>On click action</caption>
                <description></description>
            </property>
            <property key="onDropAction" type="action">
                <caption>On drop action</caption>
                <description></description>
            </property>
            <property key="onRotateAction" type="action" required="false">
                <caption>On rotate action</caption>
                <description>Optional. On rotate action. Required when allowing users to rotate items.</description>
            </property>
        </propertyGroup>
    </properties>
</widget>
